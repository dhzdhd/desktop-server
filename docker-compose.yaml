services:
  swag:
    container_name: swag
    image: linuxserver/swag:latest
    restart: unless-stopped
    ports:
      - 443:443
      - 80:80
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kolkata
      - VALIDATION=dns
      - SUBDOMAINS=wildcard
      - ONLY_SUBDOMAINS=true
    env_file:
      - .env
    volumes:
      - ./data/swag/config:/config

  db_postgres:
    container_name: db_postgres
    image: tensorchord/pgvecto-rs:pg16-v0.2.0
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    env_file:
      - env/database.env
    volumes:
      - db_postgres:/var/lib/postgresql/data
      - ./data/postgres:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # db_mysql:
  #   container_name: db_mysql
  #   image: postgres:16
  #   environment:
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #   env_file:
  #     - env/database.env
  #   volumes:
  #     - db_postgres:/var/lib/postgresql/data
  #   restart: unless-stopped

  redis:
    container_name: redis
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1

  # backup:
  #   container_name: backup

  # Authentication
  authelia:
    container_name: authelia
    image: authelia/authelia:4.38
    user: 1000:1000
    environment:
      - TZ=Asia/Kolkata
    env_file:
      - env/authelia.env
    volumes:
      - ./data/authelia:/config
    restart: unless-stopped

  # Password manager
  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    env_file:
      - .env
    volumes:
      - ./data/vaultwarden:/data
    restart: unless-stopped

  # URL shortener
  kutt:
    container_name: kutt
    image: kutt/kutt:latest
    environment:
      - DB_CLIENT=pg
      - DB_HOST=db_postgres
      - DB_PORT=5432
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env
    volumes:
      - ./data/kutt:/config
    restart: unless-stopped
    depends_on:
      db_postgres:
        condition: service_healthy
      redis:
        condition: service_started

  # File server with webdav support
  dufs:
    container_name: dufs
    image: sigoden/dufs:latest
    environment:
      - DUFS_ALLOW_ALL=true
    env_file:
      - .env
    volumes:
      - ./data/dufs:/data
    restart: unless-stopped

  # Media server
  immich:
    container_name: immich
    image: altran1502/immich-server:release
    environment:
      - TZ=Asia/Kolkata
    env_file:
      - env/immich.env
    volumes:
      - ./data/immich/media:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - redis
      - db_postgres
    restart: unless-stopped
    healthcheck:
      disable: false

volumes:
  db_postgres:
  db_mysql:
